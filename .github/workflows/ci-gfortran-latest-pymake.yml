name: gfortran - latest version

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    defaults:
      run:
        shell: bash

    if: github.repository_owner == 'MODFLOW-USGS'
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2.3.4

    - name: Setup Python 3.8
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.8

    - name: Setup symbolic links on Linux
      if: runner.os == 'Linux'
      run: |
        sudo ln -fs /usr/bin/gfortran-10 /usr/local/bin/gfortran
        sudo ln -fs /usr/bin/gcc-10 /usr/local/bin/gcc
        sudo ln -fs /usr/bin/g++-10 /usr/local/bin/g++

    - name: Setup symbolic link to gfortran on macOS
      if: runner.os == 'macOS'
      shell: bash
      run: |
        sudo ln -fs /usr/local/bin/gfortran-10 /usr/local/bin/gfortran
        sudo ln -fs /usr/local/bin/gcc-10 /usr/local/bin/gcc
        sudo ln -fs /usr/local/bin/g++-10 /usr/local/bin/g++

    - name: Print GNU compiler versions
      run: |
        gfortran --version
        gcc --version
        g++ --version

    - name: Install python packages
      run: |
        .github/common/install-python-std.sh

    - name: Print python package versions
      run: |
        .github/common/python-version.sh

    - name: Set and print branch name
      run: |
        .github/common/git-branch-export.sh

    - name: Get regression test files
      run: |
        .github/common/get-regression-files.sh

    - name: Check out the correct regression test branch
      run: |
        .github/common/checkout-regression-branch.sh

    - name: Update flopy MODFLOW 6 classes
      run: |
        .github/common/update-flopy.sh

    - name: Build applications
      working-directory: autotest
      run: |
        pytest -v --durations=0 get_exes.py
        pytest -v --durations=0 build_exes.py
        
    - name: Test applications
      working-directory: autotest
      run: |
        pytest -v --durations=0
